apiVersion: v1
items:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      app.openshift.io/vcs-ref: ""
      app.openshift.io/vcs-uri: https://github.com/redhat-na-ssa/boat-detect
    labels:
      app: boat-group
      app.kubernetes.io/component: boat-group
      app.kubernetes.io/instance: boat-group
      app.kubernetes.io/name: python
      app.kubernetes.io/part-of: boat-demo
      app.openshift.io/runtime: python
      app.openshift.io/runtime-version: 3.8-ubi8
    name: boat-group
    namespace: boats-demo
  spec:
    lookupPolicy:
      local: false
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      app.openshift.io/vcs-ref: ""
      app.openshift.io/vcs-uri: https://github.com/redhat-na-ssa/boat-detect
    labels:
      app: boat-group
      app.kubernetes.io/component: boat-group
      app.kubernetes.io/instance: boat-group
      app.kubernetes.io/name: python
      app.kubernetes.io/part-of: boat-demo
      app.openshift.io/runtime: python
      app.openshift.io/runtime-version: 3.8-ubi8
    name: boat-group
    namespace: boats-demo
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: boat-group:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /group
      git:
        uri: https://github.com/redhat-na-ssa/boat-detect
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python:3.8-ubi8
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - generic:
        secretReference:
          name: boat-group-generic-webhook-secret
      type: Generic
    - github:
        secretReference:
          name: boat-group-github-webhook-secret
      type: GitHub
    - imageChange: null
      type: ImageChange
    - type: ConfigChange
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      app.openshift.io/vcs-ref: ""
      app.openshift.io/vcs-uri: https://github.com/redhat-na-ssa/boat-detect
    labels:
      app: boat-group
      app.kubernetes.io/component: boat-group
      app.kubernetes.io/instance: boat-group
      app.kubernetes.io/name: python
      app.kubernetes.io/part-of: boat-demo
      app.openshift.io/runtime: python
      app.openshift.io/runtime-version: 3.8-ubi8
    name: boat-group
    namespace: boats-demo
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: boat-group
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: boat-group
          deploymentconfig: boat-group
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/boats-demo/boat-group:latest
          imagePullPolicy: Always
          name: boat-group
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      app.openshift.io/vcs-ref: ""
      app.openshift.io/vcs-uri: https://github.com/redhat-na-ssa/boat-group
    labels:
      app: boat-group
      app.kubernetes.io/component: boat-group
      app.kubernetes.io/instance: boat-group
      app.kubernetes.io/name: python
      app.kubernetes.io/part-of: boat-demo
      app.openshift.io/runtime: python
      app.openshift.io/runtime-version: 3.8-ubi8
    name: boat-group
    namespace: boats-demo
  spec:
    clusterIP: null
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: boat-group
      deploymentconfig: boat-group
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
